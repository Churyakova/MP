# -*- coding: utf-8 -*-
"""balansir.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LwrT_UadtlnOFbA5jG3wk1zyHmUw3-w7
"""

from math import ceil

Hectare = 10000
playgrounds_ratio = 0.4
sports_grounds_ratio = 0.3
adult_ratio = 0.1
economic_ratio = 0.1
service_ratio = 0.8


class Area:
     def __init__(self, A, bup_ratio=None, p=None, w_ratio=None, l_ratio=None, b=None, floors_ratio=None, green_ratio=None):
        self.A = A
        self.bup_ratio = bup_ratio if bup_ratio is not None else 0.8
        self.p = p if p is not None else 18000
        self.w_ratio = w_ratio if w_ratio is not None else 0.3
        self.l_ratio = l_ratio if l_ratio is not None else 0.7
        self.b = b if b is not None else 25
        self.floors_ratio = floors_ratio if floors_ratio is not None else 9

        self.green_ratio = green_ratio if green_ratio is not None else 6

        self.BSA = self.A * self.bup_ratio  # Building spot area (Площаадь пятна застройки)
        self.S = self.A * self.p  # общая площадь застройки
        self.Sw = self.S * self.w_ratio
        self.Sl = self.S * self.l_ratio
        self.Np = self.Sl / self.b
        self.R = self.Sl / self.floors_ratio / 0.73
        self.h = self.Np * playgrounds_ratio + self.Np * sports_grounds_ratio + self.Np * adult_ratio + \
                 self.Np * economic_ratio + self.Np * service_ratio

        self.Sroad = 1/Hectare

        self.Sr = self.R + self.h

        self.Osc = self.Np / 1000 * 120
        self.Nsc = ceil(self.Osc / 1100)
        self.Ssc = (self.Nsc * 1.4)*Hectare

        self.Ok = self.Np / 1000 * 61
        self.Nk = ceil(self.Ok / 180)
        self.Sk = (self.Nk * 0.72)*Hectare

        self.Sg = self.Np * 6

        self.Sfc = self.S - self.Sr - self.Ssc - self.Sk
        self.Sfa = self.A*Hectare - self.BSA - self.Sroad - self.Sg

land_area = 67.07  # площадь земельного участка - получаем от пользователя полигон, координаты или значения
dev_land_procent = 13.54  # процент застроенности участка
dev_land_area = 49.3  # общая площадь застройки
dev_land_density = 0.74  # плотность застройки
land_living_area = 34.19  # общая жилая площадь
dev_living_density = 0.51  # плотность жилой застройки
population = 15869  # численность населения
population_density = 236.6  # плотность населения
living_area_provision = 21.55  # жилищная обеспеченность
land_business_area = 8.55  # общая общественно-деловая площадь
building_height_mode = 2  # этажность (наиболее популярная)

example = Area(A=land_area, bup_ratio = None, p=None, 
               w_ratio=None, l_ratio=None, b=living_area_provision, floors_ratio=building_height_mode)
example.__dict__







example = Area(1.63, green_ratio=6)
example.__dict__

sfc_list = [Area(i).Sfc for i in range(1, 56)]
sfa_list = [Area(i).Sfa for i in range(1, 56)]

import seaborn as sns

sns.lineplot(sfc_list)
sns.lineplot(sfa_list)

